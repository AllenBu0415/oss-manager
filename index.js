"use strict";var t=require("fs-extra"),e=require("glob"),s=require("ali-oss"),i=require("path"),r=require("ora");function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var a=o(t),n=o(e),l=o(s),u=o(i),c=o(r);module.exports=class{constructor(t){this._options=t}apply(t){let e;t.hooks.afterEmit.tap("OssManager",(t=>new Promise(((s,i)=>{e=t.outputOptions.path;try{if(!this.isExists(e))throw new Error("OssManager: The target file could not be found！");{let t=this.filterFile(u.default.join(e,this._options.folderPath));if(t.length>0){const i=c.default();i.start("Upload file ......");let r=this.initOSS();Promise.all(t.map((t=>r.put(`${null!=this._options.customPath?this._options.customPath:""}/${u.default.relative(e,t.path)}`,t.content)))).then((t=>{i.succeed("upload file succeed! "),s()})).catch((t=>{throw i.fail("upload file error! Please try again!"),new Error(t)})),s()}else s()}}catch(t){i(t)}}))))}clearTarget(t){return a.default.remove(u.default.join(t,"assets"))}isExists(t){return a.default.pathExistsSync(t)}filterFile(t){return n.default.sync(t).map((t=>({path:t,content:a.default.readFileSync(t)})))}initOSS(){return new l.default({accessKeyId:this._options.accessKeyId,accessKeySecret:this._options.accessKeySecret,region:this._options.region,bucket:this._options.bucket,timeout:this._options.timeout||6e4})}};
