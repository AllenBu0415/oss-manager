"use strict";var t=require("fs-extra"),e=require("glob"),s=require("ali-oss"),i=require("path"),o=require("ora");function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var a=r(t),n=r(e),l=r(s),u=r(i),c=r(o);module.exports=class{constructor(t){this._options=t,this.client=this.initOSS()}apply(t){let e;t.hooks.afterEmit.tap("OssManager",(t=>new Promise(((s,i)=>{e=t.outputOptions.path;try{if(!this.isExists(e))throw new Error("OssManager: The target file could not be found！");{let o=this.filterFile(u.default.join(e,this._options.folderPath));if(o.length>0){const r=c.default();r.start("Upload file ......"),Promise.all(o.map((t=>this.client.put(`${null!=this._options.customPath?this._options.customPath:""}/${u.default.relative(e,t.path)}`,t.content)))).then((t=>{r.succeed("upload file succeed! "),s()})).catch((t=>{throw r.fail("upload file error! Please try again!"),new Error(t)})),this._options.isClean?this.clearTarget(t.outputOptions.path).then(s).catch(i):s()}else s()}}catch(t){i(t)}}))))}clearTarget(t){return a.default.remove(u.default.join(t,"assets"))}isExists(t){return a.default.pathExistsSync(t)}filterFile(t){return n.default.sync(t).map((t=>({path:t,content:a.default.readFileSync(t)})))}initOSS(){return new l.default({accessKeyId:this._options.accessKeyId,accessKeySecret:this._options.accessKeySecret,region:this._options.region,bucket:this._options.bucket,timeout:this._options.timeout||6e4})}};
